#!/usr/bin/env python
# -*- coding: utf-8 -*-
import time
import openravepy
from planner import priorityPlanner as prp
from planner import SIPP as multiPlanner
import random
import numpy as np
# TODO: The goal and start state of the agent on lines 60, 61 is coming same. Fix it
# TODO: Currently the configurations are not colliding in the SIPP as all config can be different even if
# the orientation is different by 0.00001. SO add the distance measure so that the path for one robot at time
# t should not include any node at that time t for other robots in an circular region of distance d.
if not __openravepy_build_doc__:
    from openravepy import *
    from numpy import *

def waitrobot(robot):
    """busy wait for robot completion"""
    while not robot.GetController().IsDone():
        time.sleep(0.01)


def ConvertPathToTrajectory(robot,path=[]):
#Path should be of the form path = [q_1, q_2, q_3,...], where q_i = [x_i, y_i, theta_i]
    if not path:
	    return None
    # Initialize trajectory
    traj = RaveCreateTrajectory(env,'')
    traj.Init(robot.GetActiveConfigurationSpecification())
    for i in range(0,len(path)):
	    traj.Insert(i,numpy.array(path[i]))
    # Move Robot Through Trajectory
    planningutils.RetimeAffineTrajectory(traj,maxvelocities=ones(3),maxaccelerations=5*ones(3))
    return traj

def removeAllRobots(env):
    for robot in env.GetRobots():
        env.RemoveKinBody(robot)

def addIndividualRobot(env, planFor, startConfigurations):
    env.AddRobot(planFor)
    planFor.SetActiveDOFValues(startConfigurations[planFor])

def removeIndividualRobot(env, planFor):
    env.RemoveKinBody(planFor)

def addAllRobots(env, startConfigurations):
    for robot in startConfigurations.keys():
        env.AddRobot(robot)
        robot.SetActiveDOFValues(startConfigurations[robot])

def tuckarms(env,robot):
    with env:
        jointnames = ['l_shoulder_lift_joint','l_elbow_flex_joint','l_wrist_flex_joint','r_shoulder_lift_joint','r_elbow_flex_joint','r_wrist_flex_joint']
        robot.SetActiveDOFs([robot.GetJoint(name).GetDOFIndex() for name in jointnames])
        robot.SetActiveDOFValues([1.29023451,-2.32099996,-0.69800004,1.27843491,-2.32100002,-0.69799996]);
        robot.GetController().SetDesired(robot.GetDOFValues());
    waitrobot(robot)

if __name__ == "__main__":

    env = Environment()
    env.SetViewer('qtcoin')
    collisionChecker = RaveCreateCollisionChecker(env,'ode')
    env.SetCollisionChecker(collisionChecker)


    env.Reset()
    # load a scene from ProjectRoom environment XML file
    # env.Load('./data/pr2test2.env.xml')
    env.Load('./data/4PR2_doorIncreased.xml')
    time.sleep(0.1)

    startConfigurations = dict()
    # 1) get the 1st robot that is inside the loaded scene
    # 2) assign it to the variable named 'robot'
    for i in range(len(env.GetRobots())):
         robot = env.GetRobots()[i]
         tuckarms(env, robot)
         robot.SetActiveDOFs([], DOFAffine.X | DOFAffine.Y | DOFAffine.RotationAxis, [0, 0, 1])
         startConfigurations[robot] = list(robot.GetActiveDOFValues())
         # tuck in the PR2's arms for driving


    # Robot[0] is the ambulance and all others are vehicles
    ambulance = env.GetRobots()[0]
    ambulanceStartConfig = list(startConfigurations[ambulance])
    ambulanceGoalConfig = [4.60594, 0.28479, 0]
    TI = dict()
    # ambulanceGoalConfig = [2.6,-1.3,-pi/2]

    random.seed(4)
    paths = []
    handler = []
    #### YOUR CODE HERE ####
    time.sleep(20)
    # paths = [[[-0.71976661682128906, 1.067456007003784, -0.0],
    #   [-0.96976661682128906, 1.067456007003784, 0.0],
    #   [-1.2197666168212891, 1.067456007003784, 0.0],
    #   [-1.4697666168212891, 1.067456007003784, 0.0],
    #   [-1.7197666168212891, 0.92745600700378394, 0.25],
    #   [-1.9697666168212891, 0.92745600700378394, 0.25],
    #   [-2.2197666168212891, 0.92745600700378394, 0.25],
    #   [-2.4697666168212891, 0.92745600700378394, 0.25],
    #   [-2.7197666168212891, 0.92745600700378394, 0.25],
    #   [-2.9697666168212891, 0.92745600700378394, 0.25],
    #   [-3.2197666168212891, 0.78745600700378393, 0.5],
    #   [-3.4697666168212891, 0.64745600700378392, 0.75],
    #   [-3.7197666168212891, 0.5074560070037839, 1.0],
    #   [-3.9697666168212891, 0.36745600700378389, 1.25],
    #   [-4.2197666168212891, 0.22745600700378388, 1.25],
    #   [-4.4697666168212891, 0.087456007003783864, 1.25],
    #   [-4.7197666168212891, -0.052543992996216149, 1.25],
    #   [-4.9697666168212891, -0.19254399299621616, 1.25],
    #   [-4.9697666168212891, -0.33254399299621618, 1.25],
    #   [-5.2197666168212891, -0.47254399299621619, 1.25],
    #   [-5.2197666168212891, -0.6125439929962162, 1.25],
    #   [-5.4697666168212891, -0.75254399299621622, 1.5],
    #   [-5.4697666168212891, -0.89254399299621623, 1.5],
    #   [-5.4697666168212891, -1.0325439929962164, 1.5],
    #   [-5.7197666168212891, -1.1725439929962165, 1.75],
    #   [-6.0040681002311747, -1.5674540517496807, 1.817815097620751]],
    #  [[1.1461532115936279, 1.045593738555908, -0.0],
    #   [1.1461532115936279, 1.1855937385559079, 0.25],
    #   [1.3961532115936279, 1.325593738555908, 0.5],
    #   [1.3961532115936279, 1.4655937385559081, 0.75],
    #   [1.3961532115936279, 1.6055937385559083, 1.0],
    #   [1.3961532115936279, 1.7455937385559084, 1.0],
    #   [1.3961532115936279, 1.8855937385559085, 1.0],
    #   [1.3961532115936279, 2.0255937385559086, 1.0],
    #   [1.3961532115936279, 2.1655937385559088, 1.0],
    #   [1.3961532115936279, 2.3055937385559089, 1.0],
    #   [1.3961532115936279, 2.445593738555909, 1.0],
    #   [1.6461532115936279, 2.5855937385559091, 1.25],
    #   [1.6461532115936279, 2.7255937385559093, 1.25],
    #   [1.6461532115936279, 2.8655937385559094, 1.25],
    #   [1.8961532115936279, 3.0055937385559095, 1.5],
    #   [1.9769986750495425, 3.4052388890471104, 1.5850221110389446]],
    #  [[1.973580956459045, 1.138869047164917, -0.0],
    #   [1.973580956459045, 0.99886904716491698, 0.0],
    #   [1.723580956459045, 0.85886904716491697, 0.0],
    #   [1.473580956459045, 0.85886904716491697, 0.0],
    #   [1.223580956459045, 0.99886904716491698, 0.0],
    #   [0.97358095645904497, 1.138869047164917, 0.0],
    #   [0.72358095645904497, 1.138869047164917, 0.0],
    #   [0.47358095645904497, 1.138869047164917, 0.0],
    #   [0.22358095645904497, 1.138869047164917, 0.0],
    #   [-0.026419043540955034, 1.138869047164917, 0.0],
    #   [-0.27641904354095503, 1.138869047164917, 0.0],
    #   [-0.52641904354095503, 1.138869047164917, 0.0],
    #   [-0.77641904354095503, 1.138869047164917, 0.0],
    #   [-1.026419043540955, 1.138869047164917, 0.0],
    #   [-1.276419043540955, 1.138869047164917, 0.0],
    #   [-1.526419043540955, 1.138869047164917, 0.0],
    #   [-1.776419043540955, 1.138869047164917, 0.0],
    #   [-2.026419043540955, 1.138869047164917, 0.0],
    #   [-2.276419043540955, 1.138869047164917, 0.0],
    #   [-2.526419043540955, 1.138869047164917, 0.0],
    #   [-2.776419043540955, 1.138869047164917, 0.0],
    #   [-3.026419043540955, 1.138869047164917, 0.0],
    #   [-3.276419043540955, 1.138869047164917, 0.0],
    #   [-3.526419043540955, 1.138869047164917, 0.0],
    #   [-3.776419043540955, 0.99886904716491698, 0.25],
    #   [-4.0264190435409546, 0.99886904716491698, 0.25],
    #   [-4.2764190435409546, 0.99886904716491698, 0.25],
    #   [-4.5264190435409546, 0.85886904716491697, 0.25],
    #   [-4.7764190435409546, 0.85886904716491697, 0.25],
    #   [-5.0264190435409546, 0.71886904716491695, 0.25],
    #   [-5.2764190435409546, 0.57886904716491694, 0.5],
    #   [-5.5264190435409546, 0.57886904716491694, 0.5],
    #   [-5.7764190435409546, 0.57886904716491694, 0.5],
    #   [-6.0560517543100438, 0.48112692775091759, 0.58811260889555816]],
    #  [[0.093353837728500366, 1.1660807132720949, -0.0],
    #   [0.34335383772850037, 1.1660807132720949, 0.0],
    #   [0.59335383772850037, 1.1660807132720949, 0.0],
    #   [0.84335383772850037, 1.1660807132720949, 0.0],
    #   [1.0933538377285004, 1.1660807132720949, 0.0],
    #   [1.3433538377285004, 1.3060807132720949, 0.0],
    #   [1.5933538377285004, 1.446080713272095, 0.0],
    #   [1.8433538377285004, 1.5860807132720951, 0.0],
    #   [2.0933538377285004, 1.7260807132720952, 0.0],
    #   [2.3433538377285004, 1.8660807132720953, 0.0],
    #   [2.5933538377285004, 2.0060807132720955, -0.25],
    #   [2.8433538377285004, 2.1460807132720956, -0.25],
    #   [3.0933538377285004, 2.1460807132720956, -0.25],
    #   [3.3433538377285004, 2.1460807132720956, -0.25],
    #   [3.5933538377285004, 2.1460807132720956, -0.25],
    #   [3.8433538377285004, 2.1460807132720956, -0.5],
    #   [4.0933538377285004, 2.1460807132720956, -0.5],
    #   [4.3433538377285004, 2.1460807132720956, -0.75],
    #   [4.5933538377285004, 2.1460807132720956, -0.75],
    #   [4.8433538377285004, 2.1460807132720956, -1.0],
    #   [5.0933538377285004, 2.1460807132720956, -1.0],
    #   [5.3433538377285004, 2.1460807132720956, -1.25],
    #   [5.5933538377285004, 2.1460807132720956, -1.25],
    #   [5.8433538377285004, 2.1460807132720956, -1.5],
    #   [6.0933538377285004, 2.1460807132720956, -1.5],
    #   [6.3433538377285004, 2.0060807132720955, -1.75],
    #   [6.8097682404236375, 1.9694189942797218, -1.8452698481212253]],
    #  [[-3.3999999999999999, -1.3999999999999999, -0.0],
    #   [-3.1499999999999999, -1.3999999999999999, 0.0],
    #   [-2.8999999999999999, -1.3999999999999999, 0.0],
    #   [-2.6499999999999999, -1.2599999999999998, 0.0],
    #   [-2.3999999999999999, -1.1199999999999997, 0.0],
    #   [-2.1499999999999999, -1.1199999999999997, 0.0],
    #   [-1.8999999999999999, -1.1199999999999997, 0.0],
    #   [-1.6499999999999999, -1.1199999999999997, 0.0],
    #   [-1.3999999999999999, -0.97999999999999965, 0.0],
    #   [-1.1499999999999999, -0.97999999999999965, 0.0],
    #   [-0.89999999999999991, -0.97999999999999965, 0.0],
    #   [-0.64999999999999991, -0.97999999999999965, 0.0],
    #   [-0.39999999999999991, -0.97999999999999965, 0.0],
    #   [-0.14999999999999991, -0.83999999999999964, 0.0],
    #   [0.10000000000000009, -0.69999999999999962, 0.0],
    #   [0.10000000000000009, -0.55999999999999961, 0.0],
    #   [0.10000000000000009, -0.4199999999999996, 0.0],
    #   [0.10000000000000009, -0.27999999999999958, 0.0],
    #   [0.10000000000000009, -0.13999999999999957, 0.0],
    #   [0.10000000000000009, 4.4408920985006262e-16, 0.0],
    #   [0.10000000000000009, 0.14000000000000046, 0.0],
    #   [0.10000000000000009, 0.28000000000000047, 0.0],
    #   [0.10000000000000009, 0.42000000000000048, 0.0],
    #   [0.10000000000000009, 0.5600000000000005, 0.0],
    #   [0.10000000000000009, 0.70000000000000051, 0.0],
    #   [0.10000000000000009, 0.84000000000000052, 0.0],
    #   [0.35000000000000009, 0.98000000000000054, 0.0],
    #   [0.60000000000000009, 1.1200000000000006, 0.0],
    #   [0.85000000000000009, 1.1200000000000006, 0.0],
    #   [1.1000000000000001, 1.1200000000000006, 0.0],
    #   [1.3500000000000001, 1.1200000000000006, 0.0],
    #   [1.6000000000000001, 0.98000000000000054, 0.0],
    #   [1.8500000000000001, 0.84000000000000052, 0.0],
    #   [2.1000000000000001, 0.70000000000000051, 0.0],
    #   [2.3500000000000001, 0.5600000000000005, 0.0],
    #   [2.6000000000000001, 0.42000000000000048, 0.0],
    #   [2.8500000000000001, 0.28000000000000047, 0.0],
    #   [3.1000000000000001, 0.28000000000000047, 0.0],
    #   [3.3500000000000001, 0.28000000000000047, 0.0],
    #   [3.6000000000000001, 0.28000000000000047, 0.0],
    #   [3.8500000000000001, 0.28000000000000047, 0.0],
    #   [4.0999999999999996, 0.28000000000000047, 0.0],
    #   [4.3499999999999996, 0.28000000000000047, 0.0],
    #   [4.60594, 0.28479, 0]]]

    paths = [[[-1.976153211593628, 1.305593738555908, -0.0],
      [-2.226153211593628, 1.1655937385559079, 0.0],
      [-2.476153211593628, 1.0255937385559077, 0.25],
      [-2.726153211593628, 1.0255937385559077, 0.25],
      [-2.976153211593628, 1.0255937385559077, 0.25],
      [-3.226153211593628, 0.88559373855590773, 0.5],
      [-3.476153211593628, 0.74559373855590771, 0.5],
      [-3.726153211593628, 0.6055937385559077, 0.75],
      [-3.976153211593628, 0.46559373855590769, 1.0],
      [-4.226153211593628, 0.32559373855590767, 1.25],
      [-4.476153211593628, 0.18559373855590766, 1.5],
      [-4.726153211593628, 0.045593738555907648, 1.75],
      [-4.976153211593628, -0.094406261444092365, 1.75],
      [-4.976153211593628, -0.23440626144409238, 1.75],
      [-5.226153211593628, -0.37440626144409239, 1.75],
      [-5.226153211593628, -0.51440626144409241, 1.75],
      [-5.226153211593628, -0.65440626144409242, 1.75],
      [-5.476153211593628, -0.79440626144409243, 1.75],
      [-5.476153211593628, -0.93440626144409245, 1.75],
      [-5.476153211593628, -1.0744062614440923, 1.75],
      [-5.726153211593628, -1.2144062614440925, 1.75],
      [-6.0040681002311747, -1.5674540517496807, 1.817815097620751]],
     [[0.57894999999999996, 1.0380713272094999, -0.0],
      [0.32894999999999996, 1.0380713272094999, 0.0],
      [0.078949999999999965, 1.0380713272094999, 0.0],
      [-0.17105000000000004, 1.0380713272094999, 0.0],
      [-0.42105000000000004, 1.0380713272094999, 0.0],
      [-0.67105000000000004, 1.0380713272094999, 0.0],
      [-0.92105000000000004, 1.0380713272094999, 0.0],
      [-1.1710500000000001, 1.0380713272094999, 0.0],
      [-1.4210500000000001, 1.0380713272094999, 0.0],
      [-1.6710500000000001, 1.0380713272094999, 0.0],
      [-1.9210500000000001, 1.0380713272094999, 0.0],
      [-2.1710500000000001, 1.0380713272094999, 0.0],
      [-2.4210500000000001, 1.0380713272094999, 0.0],
      [-2.6710500000000001, 1.0380713272094999, 0.0],
      [-2.9210500000000001, 1.0380713272094999, 0.0],
      [-3.1710500000000001, 1.0380713272094999, 0.0],
      [-3.4210500000000001, 1.0380713272094999, 0.0],
      [-3.6710500000000001, 1.0380713272094999, 0.0],
      [-3.9210500000000001, 1.0380713272094999, 0.0],
      [-4.1710500000000001, 1.0380713272094999, 0.0],
      [-4.4210500000000001, 0.89807132720949989, 0.0],
      [-4.6710500000000001, 0.89807132720949989, 0.0],
      [-4.9210500000000001, 0.89807132720949989, 0.0],
      [-5.1710500000000001, 0.75807132720949988, 0.25],
      [-5.4210500000000001, 0.75807132720949988, 0.25],
      [-5.6710500000000001, 0.61807132720949987, 0.5],
      [-6.0560517543100438, 0.48112692775091759, 0.58811260889555816]],
     [[1.973580956459045, 1.3088690471649169, -0.0],
      [1.973580956459045, 1.1688690471649168, 0.0],
      [1.973580956459045, 1.0288690471649167, 0.0],
      [1.973580956459045, 0.88886904716491666, 0.0],
      [1.973580956459045, 0.74886904716491665, 0.0],
      [1.973580956459045, 0.60886904716491663, 0.0],
      [1.973580956459045, 0.46886904716491662, 0.0],
      [1.973580956459045, 0.32886904716491661, 0.0],
      [1.973580956459045, 0.18886904716491659, 0.0],
      [1.973580956459045, 0.048869047164916579, 0.0],
      [1.973580956459045, -0.091130952835083434, 0.0],
      [1.973580956459045, -0.23113095283508345, 0.0],
      [1.973580956459045, -0.37113095283508346, 0.0],
      [1.973580956459045, -0.51113095283508347, 0.0],
      [1.973580956459045, -0.65113095283508349, 0.0],
      [1.973580956459045, -0.7911309528350835, 0.0],
      [1.973580956459045, -0.93113095283508351, 0.0],
      [1.973580956459045, -1.0711309528350834, 0.0],
      [1.973580956459045, -1.2111309528350835, 0.0],
      [1.973580956459045, -1.3511309528350837, 0.0],
      [1.973580956459045, -1.4911309528350838, 0.0],
      [1.973580956459045, -1.6311309528350839, 0.0],
      [1.973580956459045, -1.771130952835084, 0.0],
      [1.973580956459045, -1.9111309528350842, 0.0],
      [1.973580956459045, -2.0511309528350843, 0.0],
      [1.973580956459045, -2.1911309528350844, 0.0],
      [2.223580956459045, -2.3311309528350845, -0.25],
      [2.223580956459045, -2.4711309528350847, -0.25],
      [2.473580956459045, -2.6111309528350848, -0.25],
      [2.723580956459045, -2.7511309528350849, -0.5],
      [2.8419133771362501, -3.1862446095049264, -0.54510769411407223]],
     [[-0.71976661682128906, 1.0274560070037839, -0.0],
      [-0.71976661682128906, 1.1674560070037838, 0.0],
      [-0.96976661682128906, 1.3074560070037839, 0.0],
      [-1.2197666168212891, 1.4474560070037841, 0.0],
      [-1.2197666168212891, 1.5874560070037842, 0.0],
      [-1.2197666168212891, 1.7274560070037843, 0.0],
      [-1.4697666168212891, 1.8674560070037844, 0.0],
      [-1.2197666168212891, 2.0074560070037846, 0.0],
      [-0.96976661682128906, 1.8674560070037844, 0.0],
      [-0.71976661682128906, 1.7274560070037843, 0.0],
      [-0.46976661682128906, 1.5874560070037842, 0.0],
      [-0.21976661682128906, 1.4474560070037841, 0.0],
      [0.030233383178710938, 1.3074560070037839, 0.0],
      [0.28023338317871094, 1.1674560070037838, 0.0],
      [0.53023338317871094, 1.0274560070037837, 0.0],
      [0.78023338317871094, 1.0274560070037837, 0.0],
      [1.0302333831787109, 1.0274560070037837, 0.0],
      [1.2802333831787109, 1.1674560070037838, 0.0],
      [1.5302333831787109, 1.3074560070037839, 0.0],
      [1.7802333831787109, 1.4474560070037841, 0.0],
      [2.0302333831787109, 1.5874560070037842, 0.0],
      [2.2802333831787109, 1.7274560070037843, 0.0],
      [2.5302333831787109, 1.8674560070037844, 0.0],
      [2.7802333831787109, 2.0074560070037846, -0.25],
      [3.0302333831787109, 2.1474560070037847, -0.25],
      [3.2802333831787109, 2.1474560070037847, -0.25],
      [3.5302333831787109, 2.1474560070037847, -0.25],
      [3.7802333831787109, 2.1474560070037847, -0.25],
      [4.0302333831787109, 2.1474560070037847, -0.25],
      [4.2802333831787109, 2.1474560070037847, -0.25],
      [4.5302333831787109, 2.1474560070037847, -0.25],
      [4.7802333831787109, 2.1474560070037847, -0.25],
      [5.0302333831787109, 2.1474560070037847, -0.5],
      [5.2802333831787109, 2.1474560070037847, -0.75],
      [5.5302333831787109, 2.1474560070037847, -1.0],
      [5.7802333831787109, 2.1474560070037847, -1.25],
      [6.0302333831787109, 2.1474560070037847, -1.5],
      [6.2802333831787109, 2.1474560070037847, -1.5],
      [6.5302333831787109, 2.0074560070037846, -1.75],
      [6.8097682404236375, 1.9694189942797218, -1.8452698481212253]],
     [[-3.3999999999999999, -1.3999999999999999, -0.0],
      [-3.1499999999999999, -1.3999999999999999, 0.0],
      [-2.8999999999999999, -1.3999999999999999, 0.0],
      [-2.6499999999999999, -1.2599999999999998, 0.0],
      [-2.3999999999999999, -1.1199999999999997, 0.0],
      [-2.1499999999999999, -1.1199999999999997, 0.0],
      [-1.8999999999999999, -1.1199999999999997, 0.0],
      [-1.6499999999999999, -1.1199999999999997, 0.0],
      [-1.3999999999999999, -0.97999999999999965, 0.0],
      [-1.1499999999999999, -0.97999999999999965, 0.0],
      [-0.89999999999999991, -0.97999999999999965, 0.0],
      [-0.64999999999999991, -0.97999999999999965, 0.0],
      [-0.39999999999999991, -0.97999999999999965, 0.0],
      [-0.14999999999999991, -0.83999999999999964, 0.0],
      [0.10000000000000009, -0.69999999999999962, 0.0],
      [0.10000000000000009, -0.55999999999999961, 0.0],
      [0.10000000000000009, -0.4199999999999996, 0.0],
      [0.10000000000000009, -0.27999999999999958, 0.0],
      [0.10000000000000009, -0.13999999999999957, 0.0],
      [0.10000000000000009, 4.4408920985006262e-16, 0.0],
      [0.10000000000000009, 0.14000000000000046, 0.0],
      [0.10000000000000009, 0.28000000000000047, 0.0],
      [0.10000000000000009, 0.42000000000000048, 0.0],
      [0.10000000000000009, 0.5600000000000005, 0.0],
      [0.10000000000000009, 0.70000000000000051, 0.0],
      [0.10000000000000009, 0.84000000000000052, 0.0],
      [0.35000000000000009, 0.98000000000000054, 0.0],
      [0.60000000000000009, 1.1200000000000006, 0.0],
      [0.85000000000000009, 1.1200000000000006, 0.0],
      [1.1000000000000001, 1.1200000000000006, 0.0],
      [1.3500000000000001, 1.1200000000000006, 0.0],
      [1.6000000000000001, 0.98000000000000054, 0.0],
      [1.8500000000000001, 0.84000000000000052, 0.0],
      [2.1000000000000001, 0.70000000000000051, 0.0],
      [2.3500000000000001, 0.5600000000000005, 0.0],
      [2.6000000000000001, 0.42000000000000048, 0.0],
      [2.8500000000000001, 0.28000000000000047, 0.0],
      [3.1000000000000001, 0.28000000000000047, 0.0],
      [3.3500000000000001, 0.28000000000000047, 0.0],
      [3.6000000000000001, 0.28000000000000047, 0.0],
      [3.8500000000000001, 0.28000000000000047, 0.0],
      [4.0999999999999996, 0.28000000000000047, 0.0],
      [4.3499999999999996, 0.28000000000000047, 0.0],
      [4.60594, 0.28479, 0]]]

    for pathIndex in paths:
        colorValue = random.uniform(0,1)
        for state in pathIndex:
            handler.append(env.plot3(np.array([state[0], state[1], 0.1]), 5.0, colors=np.array(((colorValue, 1-colorValue, ((colorValue*5)%1))))))

    rob = env.GetRobots()[0]
    rob1 = env.GetRobots()[1]
    rob2 = env.GetRobots()[2]
    rob3 = env.GetRobots()[3]
    rob4 = env.GetRobots()[4]

    traj = ConvertPathToTrajectory(rob, paths[0])
    traj1 = ConvertPathToTrajectory(rob1, paths[1])
    traj2 = ConvertPathToTrajectory(rob2, paths[2])
    traj3 = ConvertPathToTrajectory(rob3, paths[3])
    traj4 = ConvertPathToTrajectory(rob4, paths[4])
    # Execute the trajectory on the robot.
    if traj != None:
        rob.GetController().SetPath(traj)
    if traj1 != None:
        rob1.GetController().SetPath(traj1)
    if traj2 != None:
        rob2.GetController().SetPath(traj2)
    if traj3 != None:
        rob3.GetController().SetPath(traj3)
    if traj4 != None:
        rob4.GetController().SetPath(traj4)
    time.sleep(5)
    # ambulance = env.GetRobots()[1]
    # ambulanceStartConfig = list(ambulance.GetActiveDOFValues())
    # ambulanceGoalConfig = [0, 0, 0]
    # multiPlan1 = multiPlanner.SIPP(ambulanceStartConfig, ambulanceGoalConfig, env, ambulance)
    # multiPlan1.TInterval = multiPlan.TInterval
    # multiPlan1.runSIPP()
    print("I am done")


    #### END OF YOUR CODE ###


    raw_input("Press enter to exit...")
    env.Destroy()
